services:
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://mongo:27017/blocks_world
      - PORT=3000
    volumes:
      # Mount source code for development (hot reload)
      - .:/app
      - /app/node_modules
    depends_on:
      - mongo
    restart: unless-stopped
    networks:
      - bdi-network
    command: ["node", "server.js"]
    develop:
      watch:
        # Sync public files (HTML, CSS, JS) - no restart needed (live reload in browser)
        - action: sync
          path: ./public
          target: /app/public
          ignore:
            - node_modules/
            - '*.md'
        
        # Sync BDI planner files - no restart needed
        - action: sync
          path: ./bdi
          target: /app/bdi
          ignore:
            - node_modules/
        
        # Sync utility files - restart required
        - action: sync+restart
          path: ./utils
          target: /app/utils
        
        # Sync model files - restart required
        - action: sync+restart
          path: ./models
          target: /app/models
        
        # Sync server.js - restart required
        - action: sync+restart
          path: ./server.js
          target: /app/server.js
        
        # Sync package.json - restart and rebuild required
        - action: sync+restart
          path: ./package.json
          target: /app/package.json

  mongo:
    image: mongo:7.0
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=blocks_world
    volumes:
      - mongo_data_dev:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    restart: unless-stopped
    networks:
      - bdi-network

volumes:
  mongo_data_dev:

networks:
  bdi-network:
    driver: bridge